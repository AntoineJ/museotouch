#:kivy 1.0
#:import math math
#:import Window kivy.core.window.Window
#:set grey (.6,.6,.6,1)
#:set white (1,1,1,1)

<WidgetsPanel>:
    # orientation: 'horizontal'
    size_hint: None, None
    size: Window.width, Window.height/2
    pos: 0, - self.height   

    container: container 
    canvas:
        Color:
            rgb: .1,.1,.1,1
        Rectangle:
            size: self.size
            pos: self.pos

    Button:
        text: "toggle"
        size_hint: None, None
        size: 100,50
        y: root.y + root.height
        center_x: root.center_x
        on_release: root.toggle_panel(self)

    FloatLayout:
        id: container
        size_hint: None, None
        size: root.size

        Button:
            text: "close"
            size_hint: None, None
            size: 100,50
            center_y: root.center_y
            center_x: root.center_x
            on_release: root.toggle_panel(self)

        Keyboard:
            size_hint: None, None
            size: 240,420
            pos: root.pos
            layout_filename: 'widgets/layout.json'

<ImageItem>:
	# border: 1 * self.scale
	# size_hint: None, None
	# size: 512, 512

	# do_scale: False
	# do_rotation: False
	# do_translation: False
	scale: 1
	rotation: 0

	container: container

	canvas:
		# Color:
		# 	rgb: 1, 1, 1
		# Rectangle:
		# 	pos: -self.border, -self.border
		# 	size: self.width + self.border * 2, self.height + self.border * 2
		Color:
			rgb: 0, 0, 0
		Rectangle:
			size: self.size

	FloatLayout:
		id: container
		size: root.size

		# Image:
		# 	source: root.source
		Button:
			background_normal: root.source
			background_down: root.source
			size_hint: (1 * (0.3 + 0.7 * root.flip_alpha), 1 * (0.3 + 0.7 * root.flip_alpha))
			pos_hint: {'top': 1}
			on_release: root.on_btn_moreinfo()

<ContentPopup>:
    container: container
    img: img

    canvas: 
        Color: 
            rgba: self.color
        Rectangle:
            size: self.size
            pos: 0,0

    FloatLayout:
        id: container
        size: root.size

        GridLayout:
            cols: 1
            # size_hint_x: 0.5
            size: root.width/2, root.height/2
            pos_hint: {'x':0, 'y':0}
            size_hint: None, None
            padding: 15
            spacing: 15
            canvas: 
                Color: 
                    rgba: 0,1,0,0
                Rectangle:
                    size: self.size
                    pos: self.pos
            Label:
                text: "Fiche d'identit√©"
                color: grey
                text_size: (self.width, None)
                size_hint_y: None
                height: self.texture_size[1] + 10
                font_size: 16
                canvas:
                    Color:
                        rgba: grey
                    Line:
                        points: self.x, self.y, self.x + 400 - 30, self.y

            Label:
                text: "Date :                               [color=#FFF][size=18]" + root.item.datation + "[/size][/color] "#if root.item.datation.strip() != '' else root.item.date_crea
                text_size: (self.width, None)
                color: grey
                markup: True
                size_hint_y: None
                height: self.texture_size[1] + 10
                font_size: 16
                width: root.width/2 - 30

                canvas:
                    Color:
                        rgba: grey
                    Line:
                        points: self.x, self.y, self.x + 400 - 30, self.y

            Label:
                text: "Origine :                           [color=#FFF][size=18]" + root.item.origin_ex + "[/size][/color] "
                color: grey
                markup: True
                size_hint_y: None
                height: self.texture_size[1] + 10
                font_size: 16
                text_size: (root.width/2 - 30, None)

                canvas:
                    Color:
                        rgba: grey
                    Line:
                        width: 1
                        points: self.x, self.y, self.x + 400 - 30, self.y
                        
            Label:
                text: "Date d'acquisition :        [color=#FFF][size=18]" + root.item.date_acqui + "[/size][/color] "
                color: grey
                markup: True
                size_hint_y: None
                height: self.texture_size[1] + 10
                font_size: 16
                text_size: (root.width/2 - 30, None)

                canvas:
                    Color:
                        rgba: grey
                    Line:
                        width: 1
                        points: self.x, self.y, self.x + 400 - 30, self.y                        

        GridLayout:
            cols: 1
            width: 500
            # size_hint_x: 0.5
            size_hint: None, None
            size: root.width/2, root.height
            pos_hint: {'x':.5, 'y':0}
            padding: 15
            spacing: 60
            canvas: 
                Color: 
                    rgba: 1,0,0,0
                Rectangle:
                    size: self.size
                    pos: self.pos

            Label:
                text: root.item.title
                color: white
                text_size: (self.width, None)
                size_hint_y: None
                width: root.width/2 - 30
                height: self.texture_size[1] + 10
                font_size: 36
                canvas:
                    Color:
                        rgba: grey
                    Line:
                        points: self.x, self.y - 15, self.x + 400 - 30, self.y - 15

            Label:
                text: root.item.description
                color: white
                text_size: (self.width, None)
                size_hint_y: None
                width: root.width/2 - 30
                height: self.texture_size[1] + 10
                font_size: 18
                


        Image:
            id: img
            source: root.item.filename
            size_hint: None, None
            size: root.width/2, root.height/2
            y: root.height/2
            x: - self.width * (1 - self.image_ratio ) /2


        Button:
            text: 'X Fermer'
            size_hint: None, None
            size: 100,50
            pos: root.width - self.width, root.height - self.height
            on_release: root.close(self)

<ImageItemContent>:
	GridLayout:
		cols: 1
		rows_default_height: 30
		pos_hint: {'top': 0.7}
		size_hint_x: 0.3
		padding: 5

		Label:
			text: 'Datation'
			text_size: (self.width, None)
			size_hint_y: None
			height: self.texture_size[1] + 10
			font_size: 14
		Label:
			text: root.item.datation if root.item.datation.strip() != '' else root.item.date_crea
			text_size: (self.width, None)
			size_hint_y: None
			height: self.texture_size[1] + 10
			font_size: 12
		Label:
			text: 'Origine'
			text_size: (self.width, None)
			size_hint_y: None
			height: self.texture_size[1] + 10
			font_size: 14
		# Label:
		# 	text: u'%s\n%s' % (root.item.origin, root.item.origin_ex)
		# 	text_size: (self.width, None)
		# 	size_hint_y: None
		# 	height: self.texture_size[1] + 10
		# 	font_size: 12
		Label:
			text: 'Taille'
			text_size: (self.width, None)
			size_hint_y: None
			height: self.texture_size[1] + 10
			font_size: 14
		Label:
			text: u'%d' % (root.item.taille)
			text_size: (self.width, None)
			size_hint_y: None
			height: self.texture_size[1] + 10
			font_size: 12


	GridLayout:
		cols: 1
		pos_hint: {'x': 0.3}
		size_hint_x: 0.7

		canvas.before:
			Color:
				rgb: .1, .1, .1
			Rectangle:
				pos: self.x, self.top - self.height * (1 - root.flip_alpha)
				size: self.width, self.height * (1 - root.flip_alpha)

		Label:
			text: root.item.title
			text_size: (self.width - 20, None)
			valign: 'middle'
			font_size: 16
			size_hint_y: None
			height: max(102, self.texture_size[1])
			color: (1, 1, 1, 1 - root.flip_alpha)

		Label:
			text: root.item.description
			text_size: (self.width - 20, None)
			size_hint_y: None
			height: self.texture_size[1]
			color: (1, 1, 1, 1 - root.flip_alpha)


<Keyword>:
	color: (1, 1, 1, 1) if self.selected else (.5, .5, .5, 1) 
	canvas.before:
		Color:
			rgb: 1, 1, 1
		Rectangle:
            pos: int(self.center_x - self.texture_size[0] / 2. - 32), int(self.center_y - 10)
			size: 20, 20
			source: 'widgets/circle%s.png' % ('_selected' if self.selected else '')
