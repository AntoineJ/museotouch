#:kivy 1.0

# FONTS
#:set proxima 'fonts/proximanova-regular-webfont.ttf'
#:set proximaThin 'fonts/ProximaNova-Thin-webfont.ttf'
#:set proximaSemiBold 'fonts/proximanova-semibold-webfont.ttf'
#:set proximaBold 'fonts/proximanova-bold-webfont.ttf'
#:set futura 'fonts/FuturaLT.ttf'

# IMPORTS
#:import math math
#:import Window kivy.core.window.Window

# COLORS
#:set blue (0,.647,.635,1)
#:set grey (0,0,0,1)
#:set white (1,1,1,1)
#:set greybg (0.933,0.933,0.933,1)
#:set greytext (0.235,0.235,0.235,1)
#:set greytitle (0.2,0.2,0.2,1)

<KeyScrollItem>:
    # size_hint: None, None
    color: greytitle if self.state == 'normal' else (1,1,1,1)
    halign: 'left'
    size_hint_x: None
    size_hint_y: None

    width: 240 if not self.parent else self.parent.width -60
    height: self.texture_size[1] + 20
    text_size: (self.width, None)

    font_name: proxima if self.state == 'normal' else proximaSemiBold
    font_size: 14
    
    canvas.before:
        Color:
            rgba: (0,0,0,0) if self.state == 'normal' else blue
        Rectangle:
            pos: self.x - 15, self.y
            size: self.width +30, self.height

<KeywordScrollView>:
    size_hint: None, None
    do_scroll_x: False

    container: container
    canvas:
        Color:
            rgba: .9,.9,.9,0
        Rectangle:
            pos: self.pos
            size: self.size

    GridLayout:
        id: container
        size_hint: None, None
        size: root.size
        cols: 1
        spacing: 0
        padding: 30 ,30 ,0 ,0

<WidgetsPanel>:
    # orientation: 'horizontal'
    size_hint: None, None
    size: Window.width, 510
    pos: 0, - self.height + 60 

    container: container 
    keyboard: keyboard
    dynamic_sentence: dynamic_sentence
    result_sentence: result_sentence

    canvas:
        Color:
            rgb: greybg
        Rectangle:
            size: self.size
            pos: self.pos
        Color:
            rgba: 0,0,0,.3
        Line:
            points: self.x, self.y + self.height - 61, self.x + self.width, self.y + self.height -61
        Line:
            points: self.x + 240 +1, self.y, self.x + 240 + 1, self.y + self.height - 62
        Line:
            points: self.x + 240*3 + 3, self.y, self.x + 240*3 + 3, self.y + self.height - 62
        Line:
            points: self.x + 240*4 + 5, self.y, self.x + 240*4 + 5, self.y + self.height - 62
        Line:
            points: self.x + 240*5 + 7, self.y, self.x + 240*5 + 7, self.y + self.height - 62

    ToggleButton:
        # text: "open" if self.state == "normal" else "close"
        size_hint: None, None
        size: Window.width,60
        y: root.y + root.height - self.height
        center_x: root.center_x
        on_release: root.toggle_panel(self)

        canvas:
            Color:
                rgb: 1,1,1
            Rectangle: 
                pos: self.pos
                size: self.size

    Label: 
        text: 'TITRES'
        font_name: proximaBold
        size_hint: None, None
        color: greytitle
        font_size: 16
        halign: 'left'
        pos: root.x + 240 + 30, root.y + root.height- 90 
        height: 30
        width: self.texture_size[0]
        text_size: None, 30

    Label:
        text: ' AUTEURS'
        font_name: proximaBold
        size_hint: None, None
        color: greytitle
        font_size: 16
        halign: 'left'
        pos: root.x + 240 * 3+ 30, root.y + root.height- 90 
        height: 30
        width: self.texture_size[0]
        text_size: None, 30

    Label:
        text: ' THÈMES'
        font_name: proximaBold
        size_hint: None, None
        color: greytitle
        font_size: 16
        halign: 'left'
        pos: root.x + 240 * 4 + 30, root.y + root.height- 90 
        height: 30
        width: self.texture_size[0]
        text_size: None, 30

    Label: 
        id: dynamic_sentence
        text: "Dessine moi un livre !"
        font_name: proxima
        size_hint: None, None
        color: greytitle
        markup: True
        font_size: 24
        halign: 'left'
        valign: 'middle'
        pos: root.x + 30, root.y + root.height- 60 
        height: 60
        width: self.texture_size[0]
        text_size: None, 60

    Label: 
        id: result_sentence
        text: "J'ai trouvé 50 livres!"
        font_name: proxima
        size_hint: None, None
        color: white
        markup: True
        font_size: 24
        halign: 'left'
        valign: 'middle'
        pos: root.x + root.width - 420, root.y + root.height- 60 
        height: 60
        width: 270
        text_size: 270, 60
        padding: (-15, 0)
        canvas.before:
            Color: 
                rgba: blue
            Rectangle:
                pos: self.pos
                size: self.size

    Image:
        source: 'widgets/logo-biin.png'
        size_hint: None, None
        size: 33,20
        center: root.x + root.width - 30, root.y + root.height - 30
        color: blue
        canvas.before:
            Color:
                rgba: 1,1,1,1
            Rectangle:
                pos: root.x + root.width - 60, root.y + root.height- 60 
                size: 60,60

    Image:
        source: 'widgets/logo-enssib.png'
        size_hint: None, None
        size: 70,20
        center: root.x + root.width - 105, root.y + root.height - 30
        color: blue
        canvas.before:
            Color:
                rgba: 1,1,1,1
            Rectangle:
                pos: root.x + root.width - 150, root.y + root.height- 60 
                size: 90,60


    FloatLayout:
        id: container
        size_hint: 0,0
        size: root.size
        # orientation: 'horizontal'
        
        Keyboard:
            id: keyboard
            label_text: label_text
            # btnClear: btnClear
            do_scale: False
            do_rotation: False
            do_translation: False
            size_hint: None,None
            size: 240,420
            pos: root.pos

            Label:
                id: label_text
                text: ''
                font_size: 36
                color: 0,0,0,1
                text_size: 158, 50
                size: 158, 50
                size_hint: None, None
                pos: 30, 370
                valign: 'middle'
                halign: 'left'
                font_name: proximaThin

            # Button:
            #     id: btnClear
            #     text: 'x'
            #     size: 20, 48
            #     pos: 189, 370
            #     size_hint: None, None
            #     border: [0,0,0,0]
            #     background_normal: 'btn.png'
            #     # background_down: 'btn_close_down.png'
            #     background_color: [0.8,0.8,0.8,1]
            #     color: [0,0,0,1]
           
            # canvas.before:
            #     Color:
            #         rgb: .9,.9,.9
            #     Rectangle:
            #         pos: self.pos
            #         size: self.size

        # KeywordScrollView:
        #     size_hint: None, None
        #     pos: 240,0

<Key>:
    pic: pic
    size_hint: None, None
    border: [0,0,0,0]
    font_name: proximaThin
    background_normal: 'widgets/btn.png'
    background_disabled_normal: 'widgets/btn.png'
    background_disabled_down: 'widgets/btn.png'
    background_down: 'widgets/btn.png'
    size: self.wd - 2, self.hgt - 2
    font_size: (self.hgt+2) / 2.
    pos: self.centre[0] - self.size[0]/2., self.centre[1] - self.size[1]/2.

    Scatter:
        id: pic
        do_scale: False
        do_rotation: False
        do_translation: False
        size_hint: None, None
        size: root.size
        pos: root.pos
        canvas:
            Color:
                rgba: (0,0,0,0) if root.img =='' else ((1,1,1,0.4) if root.disabled else (1,1,1,1))
            Rectangle:
                pos: 0,0
                size: root.size
                source: root.img



<SizeSlider>:
    canvas:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            pos: self.x, self.y
            size: self.size
            # source: 'widgets/taille.png'
        Color:
            rgba: .3,.3,.3, 1
        Rectangle:
            pos: self.x + self.value_min * self.width, 0
            size: self.width * (self.value_max - self.value_min), self.height


    Scatter:
        do_translation: False
        do_scale: False
        do_rotation: False
        rotation: 90
        size_hint: None,None
        pos: root.x + root.value_min * root.width - 40, 0


        Label: 
            size_hint: None, None
            text: root.text_min
            width: 240
            height: 60
            
            canvas.before:
                Color:
                    rgb: .6,.6,.6
                Rectangle:
                    pos: self.pos
                    size: self.size
        
    Scatter:
        do_translation: False
        do_scale: False
        do_rotation: False
        rotation: 90
        size_hint: None,None
        pos: root.x + root.value_max * root.width - self.width, 0

        Label:
            size_hint: None, None
            width: 240
            height: 60
            text: root.text_max
            
            canvas.before:
                Color:
                    rgb: .6,.6,.6
                Rectangle:
                    pos: self.pos
                    size: self.size

<Keyword>:
    size_hint: None,None
    size: 240,40
    color: (1, 1, 1, 1) if self.selected else (.5, .5, .5, 1) 
    canvas.before:
        Color:
            rgb: 1, 1, 1
        Rectangle:
            pos: int(self.center_x - self.texture_size[0] / 2. - 32), int(self.center_y - 10)
            size: 20, 20
            # source: 'widgets/circle%s.png' % ('_selected' if self.selected else '')

<ImageItem>:
	# border: 1 * self.scale
	# size_hint: None, None
	# size: 512, 512

	# do_scale: False
	# do_rotation: False
	# do_translation: False
	scale: 1
	rotation: 0

	container: container

	canvas:
		# Color:
		# 	rgb: 1, 1, 1
		# Rectangle:
		# 	pos: -self.border, -self.border
		# 	size: self.width + self.border * 2, self.height + self.border * 2
		Color:
			rgb: 0, 0, 0
		Rectangle:
			size: self.size

	FloatLayout:
		id: container
		size: root.size

		# Image:
		# 	source: root.source
		Button:
			background_normal: root.source
			background_down: root.source
			size_hint: (1 * (0.3 + 0.7 * root.flip_alpha), 1 * (0.3 + 0.7 * root.flip_alpha))
			pos_hint: {'top': 1}
			on_release: root.on_btn_moreinfo()

<ScrollItem>:
    background_normal: root.source
    background_down: root.source
    # size_hint: (1 * (0.3 + 0.7 * root.flip_alpha), 1 * (0.3 + 0.7 * root.flip_alpha))
    size_hint: None, None
    pos_hint: {'top': 1}
    on_press: root.open()

<ContentPopup>:
    container: container
    img: img
    scale_min: .5
    scale_max: 1.5

    canvas: 
        Color: 
            rgba: self.color
        Rectangle:
            size: self.size
            pos: 0,0

    FloatLayout:
        id: container
        size: root.size

        GridLayout:
            cols: 1
            # size_hint_x: 0.5
            size: root.width/2, root.height/2
            pos_hint: {'x':0, 'y':0}
            size_hint: None, None
            padding: 15
            spacing: 15
            canvas: 
                Color: 
                    rgba: 0,1,0,0
                Rectangle:
                    size: self.size
                    pos: self.pos
            Label:
                text: "Fiche d'identité"
                color: grey
                text_size: (self.width, None)
                size_hint_y: None
                height: self.texture_size[1] + 10
                font_size: 16
                canvas:
                    Color:
                        rgba: grey
                    Line:
                        points: self.x, self.y, self.x + 400 - 30, self.y

            Label:
                text: "Date :                               [color=#FFF][size=18]" + root.item.datation + "[/size][/color] "#if root.item.datation.strip() != '' else root.item.date_crea
                text_size: (self.width, None)
                color: grey
                markup: True
                size_hint_y: None
                height: self.texture_size[1] + 10
                font_size: 16
                width: root.width/2 - 30

                canvas:
                    Color:
                        rgba: grey
                    Line:
                        points: self.x, self.y, self.x + 400 - 30, self.y

            Label:
                text: "Origine :                           [color=#FFF][size=18]" + root.item.origin_ex + "[/size][/color] "
                color: grey
                markup: True
                size_hint_y: None
                height: self.texture_size[1] + 10
                font_size: 16
                text_size: (root.width/2 - 30, None)

                canvas:
                    Color:
                        rgba: grey
                    Line:
                        width: 1
                        points: self.x, self.y, self.x + 400 - 30, self.y
                        
            Label:
                text: "Date d'acquisition :        [color=#FFF][size=18]" + root.item.date_acqui + "[/size][/color] "
                color: grey
                markup: True
                size_hint_y: None
                height: self.texture_size[1] + 10
                font_size: 16
                text_size: (root.width/2 - 30, None)

                canvas:
                    Color:
                        rgba: grey
                    Line:
                        width: 1
                        points: self.x, self.y, self.x + 400 - 30, self.y                        

        GridLayout:
            cols: 1
            width: 500
            # size_hint_x: 0.5
            size_hint: None, None
            size: root.width/2, root.height
            pos_hint: {'x':.5, 'y':0}
            padding: 15
            spacing: 60
            canvas: 
                Color: 
                    rgba: 1,0,0,0
                Rectangle:
                    size: self.size
                    pos: self.pos

            Label:
                text: root.item.title
                color: white
                text_size: (self.width, None)
                size_hint_y: None
                width: root.width/2 - 30
                height: self.texture_size[1] + 10
                font_size: 36
                canvas:
                    Color:
                        rgba: grey
                    Line:
                        points: self.x, self.y - 15, self.x + 400 - 30, self.y - 15

            Label:
                text: root.item.description
                color: white
                text_size: (self.width, None)
                size_hint_y: None
                width: root.width/2 - 30
                height: self.texture_size[1] + 10
                font_size: 18
                


        Image:
            id: img
            source: root.item.filename
            size_hint: None, None
            size: root.width/2, root.height/2
            y: root.height/2
            x: - self.width * (1 - self.image_ratio ) /2


        Button:
            text: 'X Fermer'
            size_hint: None, None
            size: 100,50
            pos: root.width - self.width, root.height - self.height
            on_release: root.close(self)

<ImageItemContent>:
	GridLayout:
		cols: 1
		rows_default_height: 30
		pos_hint: {'top': 0.7}
		size_hint_x: 0.3
		padding: 5

		Label:
			text: 'Datation'
			text_size: (self.width, None)
			size_hint_y: None
			height: self.texture_size[1] + 10
			font_size: 14
		Label:
			text: root.item.datation if root.item.datation.strip() != '' else root.item.date_crea
			text_size: (self.width, None)
			size_hint_y: None
			height: self.texture_size[1] + 10
			font_size: 12
		Label:
			text: 'Origine'
			text_size: (self.width, None)
			size_hint_y: None
			height: self.texture_size[1] + 10
			font_size: 14
		# Label:
		# 	text: u'%s\n%s' % (root.item.origin, root.item.origin_ex)
		# 	text_size: (self.width, None)
		# 	size_hint_y: None
		# 	height: self.texture_size[1] + 10
		# 	font_size: 12
		Label:
			text: 'Taille'
			text_size: (self.width, None)
			size_hint_y: None
			height: self.texture_size[1] + 10
			font_size: 14
		Label:
			text: u'%d' % (root.item.taille)
			text_size: (self.width, None)
			size_hint_y: None
			height: self.texture_size[1] + 10
			font_size: 12


	GridLayout:
		cols: 1
		pos_hint: {'x': 0.3}
		size_hint_x: 0.7

		canvas.before:
			Color:
				rgb: .1, .1, .1
			Rectangle:
				pos: self.x, self.top - self.height * (1 - root.flip_alpha)
				size: self.width, self.height * (1 - root.flip_alpha)

		Label:
			text: root.item.title
			text_size: (self.width - 20, None)
			valign: 'middle'
			font_size: 16
			size_hint_y: None
			height: max(102, self.texture_size[1])
			color: (1, 1, 1, 1 - root.flip_alpha)

		Label:
			text: root.item.description
			text_size: (self.width - 20, None)
			size_hint_y: None
			height: self.texture_size[1]
			color: (1, 1, 1, 1 - root.flip_alpha)

